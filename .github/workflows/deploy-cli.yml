name: Deploy CLI Package

on:
  push:
    branches: [ main ]
    paths:
      - 'cli/**'
      - '.github/workflows/deploy-cli.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'cli/**'
      - '.github/workflows/deploy-cli.yml'

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: cli/package-lock.json
        
    - name: Install dependencies
      run: |
        cd cli
        npm ci
        
    - name: Run tests
      run: |
        cd cli
        npm test
        
    - name: Build package
      run: |
        cd cli
        npm run build
        
    - name: Verify package contents
      run: |
        cd cli
        npm pack --dry-run
        
  deploy:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        cache-dependency-path: cli/package-lock.json
        
    - name: Install dependencies
      run: |
        cd cli
        npm ci
        
    - name: Build package
      run: |
        cd cli
        npm run build
        
    - name: Publish to npm
      run: |
        cd cli
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: cli-v${{ steps.get-version.outputs.version }}
        release_name: CLI Package v${{ steps.get-version.outputs.version }}
        body: |
          ## CLI Package v${{ steps.get-version.outputs.version }}
          
          ### Changes
          - Automated deployment from GitHub Actions
          - Built and tested on Node.js 20
          
          ### Installation
          ```bash
          npm install -g @debugmate/cli
          ```
          
          ### Usage
          ```bash
          debug-mate test.c
          ```
        draft: false
        prerelease: false
        
    - name: Get package version
      id: get-version
      run: |
        cd cli
        echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
